---
version: '3'
services:

  redis:
    image: "bitnami/redis:latest"
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - pharma_news-network

  pharma_news:
    image: ${COMPOSE_PROJECT_NAME}_pharma_news-python
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    volumes:
      - ../pharma_news:/news-project/pharma_news
      - ../notebooks/:/news-project/notebooks/
      - type: bind
        source: ../.env
        target: /news-project/.env
    working_dir: /news-project/notebooks/
#    restart: unless-stopped
    networks:
      - pharma_news-network

  # POSTGRES DB
  postgres-db:
    image: postgres:13.2
    environment:
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
      POSTGRES_MULTIPLE_DATABASES: "${AIRFLOW_POSTGRES_DB}"
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: UTC
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    expose:
      - ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:5432
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 5s
      retries: 5
    networks:
      - pharma_news-network
    restart: always

  # waitfor-postgres-db
  waitfor-postgres-db:
    image: dadarek/wait-for-dependencies
    depends_on:
      - postgres-db
    command: postgres-db:5432
    networks:
      - pharma_news-network

  # AIRFLOW WEBSERVER
  airflow-webserver:
    image: ${COMPOSE_PROJECT_NAME}_pharma_news-python
    restart: always
    depends_on:
      - waitfor-postgres-db
    environment:
      AIRFLOW__CORE__BASE_LOG_FOLDER: ${AIRFLOW_LOG_FOLDER}
      AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW_DAG_FOLDER}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 0
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://${POSTGRES_USER}:${POST\
        GRES_PASSWORD}@${COMPOSE_PROJECT_NAME}-${POSTGRES_HOST}-1:5432/${AIRFLOW_POSTGRES_DB}"
      AIRFLOW__SMTP__SMTP_HOST: ${SMTP_HOST}
      AIRFLOW__SMTP__SMTP_MAIL_FROM: ${SMTP_MAIL_FROM}
      AIRFLOW__SMTP__SMTP_PASSWORD: ${SMTP_PWD}
      AIRFLOW__SMTP__SMTP_PORT: ${SMTP_PORT}
      AIRFLOW__SMTP__SMTP_SSL: ${SMTP_SSL}
      AIRFLOW__SMTP__SMTP_STARTTLS: ${SMTP_STARTTLS}
      AIRFLOW__SMTP__SMTP_USER: ${SMTP_USER}
      AIRFLOW__WEBSERVER__WEB_SERVER_PORT: ${AIRFLOW_PORT}
      AIRFLOW_CREATE_USER_CONN: ${AIRFLOW_CREATE_USER_CONN}
      AIRFLOW_EMAIL: ${AIRFLOW_EMAIL}
      AIRFLOW_FIRST: ${AIRFLOW_FIRST}
      AIRFLOW_LAST: ${AIRFLOW_LAST}
      AIRFLOW_USER: ${AIRFLOW_USER}
      AIRFLOW_PASSWORD: ${AIRFLOW_PASSWORD}
      AIRFLOW_ROLE: ${AIRFLOW_ROLE}
      TZ: UTC
    ports:
      - ${AIRFLOW_PORT}:${AIRFLOW_PORT}
    entrypoint: bash /news-project/docker/entrypoints/start_airflow_webserver.sh
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "[ -f /usr/local/airflow/airflow-webserver.pid ]"
        ]
      interval: 60s
      timeout: 30s
      retries: 3
    volumes:
      - ../pharma_news/dags/logs/:${AIRFLOW_LOG_FOLDER}
      - ../pharma_news/dags/:${AIRFLOW_DAG_FOLDER}
      - ../:/news-project/
      - type: bind
        source: ../.env
        target: /news-project/.env
    working_dir: /news-project/
    networks:
      - pharma_news-network

  # WAITFOR-WEBSERVER SERVICE
  waitfor-webserver:
    image: dadarek/wait-for-dependencies
    depends_on:
      - airflow-webserver
    command: airflow-webserver:${AIRFLOW_PORT}
    networks:
      - pharma_news-network

  # AIRFLOW SCHEDULER
  airflow-scheduler:
    image: ${COMPOSE_PROJECT_NAME}_pharma_news-python
    restart: always
    depends_on:
      - waitfor-webserver
    environment:
      AIRFLOW__CORE__BASE_LOG_FOLDER: ${AIRFLOW_LOG_FOLDER}
      AIRFLOW__CORE__DAGS_FOLDER: ${AIRFLOW_DAG_FOLDER}
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 0
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://${POSTGRES_USER}:${POST\
        GRES_PASSWORD}@${COMPOSE_PROJECT_NAME}-${POSTGRES_HOST}-1:5432/${AIRFLOW_POSTGRES_DB}"
      AIRFLOW__SMTP__SMTP_HOST: ${SMTP_HOST}
      AIRFLOW__SMTP__SMTP_MAIL_FROM: ${SMTP_MAIL_FROM}
      AIRFLOW__SMTP__SMTP_PASSWORD: ${SMTP_PWD}
      AIRFLOW__SMTP__SMTP_PORT: ${SMTP_PORT}
      AIRFLOW__SMTP__SMTP_SSL: ${SMTP_SSL}
      AIRFLOW__SMTP__SMTP_STARTTLS: ${SMTP_STARTTLS}
      AIRFLOW__SMTP__SMTP_USER: ${SMTP_USER}
#      MLFLOW_ARTIFACT_ROOT: ${MLFLOW_ARTIFACT_ROOT}
      AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL: 90
      TZ: UTC
    command: poetry run airflow scheduler
    volumes:
      - ../pharma_news/dags/logs/:${AIRFLOW_LOG_FOLDER}
      - ../pharma_news/dags/:${AIRFLOW_DAG_FOLDER}
      - ../:/news-project/
      - type: bind
        source: ../.env
        target: /news-project/.env
    working_dir: /news-project/
    networks:
      - pharma_news-network

# VOLUMES
volumes:
  postgres-data:

# NETWORKS
networks:
  pharma_news-network:
    ipam:
      driver: default
      config:
        - subnet: ${IP_SUBNET}/16
